from pathlib import Path
import os
from decouple import config
from django.urls import reverse_lazy
from django.templatetags.static import static
from django.utils.translation import gettext_lazy as _
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', default=False, cast=bool)
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost').split(',')



# Application definition

DJANGO_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'django_filters',
    'corsheaders',
    'parler', 
    'rosetta',
    'ckeditor',
    'ckeditor_uploader',

]

LOCAL_APPS = [
   # –í–∞—à–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    'apps.content',
    'apps.services',
    'apps.projects',
    'apps.jobs',
    'apps.partners',
    'apps.contacts',
    'apps.api',
    
]
UNFOLOD = [
    'unfold',  # before django.contrib.admin
    'unfold.contrib.filters',  # optional, requires django-filter
    'unfold.contrib.forms',  # optional, requires django-crispy-forms
    'unfold.contrib.inlines',  # optional
    'unfold.contrib.import_export',  # optional, requires django-import-export
    'unfold.contrib.guardian',  # optional, requires django-guardian
    'unfold.contrib.simple_history',  # optional, requires django-simple-history
]

INSTALLED_APPS = UNFOLOD + DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'apps.api.middleware.TranslationsCacheMiddleware', 
]

ROOT_URLCONF = 'ugc_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ugc_backend.wsgi.application'


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Internationalization
LANGUAGE_CODE = 'uk'
TIME_ZONE = 'Europe/Kiev'
USE_I18N = True
USE_TZ = True

LANGUAGES = [
    ('uk', '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'),
    ('en', 'English'),
]

LOCALE_PATHS = [
    BASE_DIR / 'locale',  
]

MODELTRANSLATION_LANGUAGES = ('uk', 'en')


CKEDITOR_CONFIGS = {
    'default': {
        #'skin': 'moono',
        'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {'name': 'forms',
             'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                       'HiddenField']},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',
                

            ]},
        ],
        'image2_alignClasses': ['align-left', 'align-center', 'align-right'],
        'toolbar': 'YourCustomToolbarConfig',  
       
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage', 
            'div',
            'justify',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
           
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    }
}

# Unfold Admin Configuration
UNFOLD = {
    "SITE_TITLE": "UGC - –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å",
    "SITE_HEADER": "–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∞–π—Ç–æ–º UGC",
    "SITE_URL": "/",
    "SITE_ICON": lambda request: static("image/favicon.ico"),  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    
   
    "SITE_SYMBOL": "business",  # symbol from icon set
    "SHOW_HISTORY": True,  # show/hide "History" button
    "SHOW_VIEW_ON_SITE": True,  # show/hide "View on site" button
    "ENVIRONMENT": "ugc_backend.settings.environment_callback",  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    "DASHBOARD_CALLBACK": "ugc_backend.settings.dashboard_callback",  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    "LOGIN": {
        "image": lambda request: static("login-bg.jpg"),  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        "redirect_after": lambda request: reverse_lazy("admin:index"),
    },
    "STYLES": [
        #lambda request: static("css/styles.css"),  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    ],
    "SCRIPTS": [
        #lambda request: static("js/script.js"),  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    ],
    "COLORS": {
        "primary": {
            "50": "250 245 255",
            "100": "243 232 255",
            "200": "233 213 255",
            "300": "216 180 254",
            "400": "196 141 253",
            "500": "168 85 247",
            "600": "147 51 234",
            "700": "126 34 206",
            "800": "107 33 168",
            "900": "88 28 135",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "üá∫üá∏",
                "uk": "üá∫üá¶",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": False,
        "navigation": [
            {
                "title": _("–ù–∞–≤—ñ–≥–∞—Ü—ñ—è"),
                "separator": True,
                "items": [
                    {
                        "title": _("–ì–æ–ª–æ–≤–Ω–∞"),
                        "icon": "dashboard",
                        "link": lambda request: reverse_lazy("admin:index"),
                    },
                ],
            },
            {
                "title": _("–ö–æ–Ω—Ç–µ–Ω—Ç"),
                "separator": True,
                "items": [
                    {
                        "title": _("–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"),
                        "icon": "home",
                        "link": lambda request: reverse_lazy("admin:content_homepage_changelist"),
                    },
                    {
                        "title": _("–ü—Ä–æ –Ω–∞—Å"),
                        "icon": "info",
                        "link": lambda request: reverse_lazy("admin:content_aboutpage_changelist"),
                    },
                    {
                        "title": _("–ö–æ–º–∞–Ω–¥–∞"),
                        "icon": "group",
                        "link": lambda request: reverse_lazy("admin:content_teammember_changelist"),
                    },
                    {
                        "title": _("–°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏"),
                        "icon": "verified",
                        "link": lambda request: reverse_lazy("admin:content_certificate_changelist"),
                    },
                    {
                        "title": _("–§–æ—Ç–æ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞"),
                        "icon": "photo_library",
                        "link": lambda request: reverse_lazy("admin:content_productionphoto_changelist"),
                    },
                ],
            },
            {
                "title": _("–ü–æ—Å–ª—É–≥–∏"),
                "separator": True,
                "items": [
                    {
                        "title": _("–í—Å—ñ –ø–æ—Å–ª—É–≥–∏"),
                        "icon": "design_services",
                        "link": lambda request: reverse_lazy("admin:services_service_changelist"),
                    },
                    {
                        "title": _("–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ –ø–æ—Å–ª—É–≥"),
                        "icon": "star",
                        "link": lambda request: reverse_lazy("admin:services_servicefeature_changelist"),
                    },
                ],
            },
            {
                "title": _("–ü—Ä–æ—î–∫—Ç–∏"),
                "separator": True,
                "items": [
                    {
                        "title": _("–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø—Ä–æ—î–∫—Ç—ñ–≤"),
                        "icon": "category",
                        "link": lambda request: reverse_lazy("admin:projects_projectcategory_changelist"),
                    },
                    {
                        "title": _("–í—Å—ñ –ø—Ä–æ—î–∫—Ç–∏"),
                        "icon": "work",
                        "link": lambda request: reverse_lazy("admin:projects_project_changelist"),
                    },
                    {
                        "title": _("–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—ñ–≤"),
                        "icon": "collections",
                        "link": lambda request: reverse_lazy("admin:projects_projectimage_changelist"),
                    },
                ],
            },
            {
                "title": _("–í–∞–∫–∞–Ω—Å—ñ—ó"),
                "separator": True,
                "items": [
                    {
                        "title": _("–ü–æ–∑–∏—Ü—ñ—ó"),
                        "icon": "work_outline",
                        "link": lambda request: reverse_lazy("admin:jobs_jobposition_changelist"),
                    },
                    {
                        "title": _("–ó–∞—è–≤–∫–∏"),
                        "icon": "assignment",
                        "link": lambda request: reverse_lazy("admin:jobs_jobapplication_changelist"),
                    },
                    {
                        "title": _("–§–æ—Ç–æ —Ä–æ–±–æ—á–∏—Ö –º—ñ—Å—Ü—å"),
                        "icon": "business_center",
                        "link": lambda request: reverse_lazy("admin:jobs_workplacephoto_changelist"),
                    },
                ],
            },
            {
                "title": _("–ü–∞—Ä—Ç–Ω–µ—Ä–∏"),
                "separator": True,
                "items": [
                    {
                        "title": _("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤"),
                        "icon": "handshake",
                        "link": lambda request: reverse_lazy("admin:partners_partnershipinfo_changelist"),
                    },
                    {
                        "title": _("–ï—Ç–∞–ø–∏ —Ä–æ–±–æ—Ç–∏"),
                        "icon": "timeline",
                        "link": lambda request: reverse_lazy("admin:partners_workstage_changelist"),
                    },
                    {
                        "title": _("–ó–∞–ø–∏—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤"),
                        "icon": "mail",
                        "link": lambda request: reverse_lazy("admin:partners_partnerinquiry_changelist"),
                    },
                ],
            },
            {
                "title": _("–ö–æ–Ω—Ç–∞–∫—Ç–∏"),
                "separator": True,
                "items": [
                    {
                        "title": _("–û—Ñ—ñ—Å–∏ —Ç–∞ —Ñ–∞–±—Ä–∏–∫–∏"),
                        "icon": "business",
                        "link": lambda request: reverse_lazy("admin:contacts_office_changelist"),
                    },
                    {
                        "title": _("–ó–≤–µ—Ä–Ω–µ–Ω–Ω—è"),
                        "icon": "contact_support",
                        "link": lambda request: reverse_lazy("admin:contacts_contactinquiry_changelist"),
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": [
                "contacts.office",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –æ—Ñ—ñ—Å–∏"),
                    "link": lambda request: reverse_lazy("admin:contacts_office_changelist"),
                },
                {
                    "title": _("–ê–∫—Ç–∏–≤–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:contacts_office_changelist") + "?is_active__exact=1",
                },
                {
                    "title": _("–ì–æ–ª–æ–≤–Ω—ñ –æ—Ñ—ñ—Å–∏"),
                    "link": lambda request: reverse_lazy("admin:contacts_office_changelist") + "?is_main__exact=1",
                },
            ],
        },
        {
            "models": [
                "contacts.contactinquiry",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è"),
                    "link": lambda request: reverse_lazy("admin:contacts_contactinquiry_changelist"),
                },
                {
                    "title": _("–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:contacts_contactinquiry_changelist") + "?is_processed__exact=0",
                },
                {
                    "title": _("–û–±—Ä–æ–±–ª–µ–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:contacts_contactinquiry_changelist") + "?is_processed__exact=1",
                },
            ],
        },
        {
            "models": [
                "services.service",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –ø–æ—Å–ª—É–≥–∏"),
                    "link": lambda request: reverse_lazy("admin:services_service_changelist"),
                },
                {
                    "title": _("–ê–∫—Ç–∏–≤–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:services_service_changelist") + "?is_active__exact=1",
                },
                {
                    "title": _("–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:services_service_changelist") + "?is_featured__exact=1",
                },
            ],
        },
        {
            "models": [
                "projects.project",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –ø—Ä–æ—î–∫—Ç–∏"),
                    "link": lambda request: reverse_lazy("admin:projects_project_changelist"),
                },
                {
                    "title": _("–ê–∫—Ç–∏–≤–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:projects_project_changelist") + "?is_active__exact=1",
                },
                {
                    "title": _("–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:projects_project_changelist") + "?is_featured__exact=1",
                },
            ],
        },
        {
            "models": [
                "jobs.jobposition",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó"),
                    "link": lambda request: reverse_lazy("admin:jobs_jobposition_changelist"),
                },
                {
                    "title": _("–ê–∫—Ç–∏–≤–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:jobs_jobposition_changelist") + "?is_active__exact=1",
                },
                {
                    "title": _("–¢–µ—Ä–º—ñ–Ω–æ–≤—ñ"),
                    "link": lambda request: reverse_lazy("admin:jobs_jobposition_changelist") + "?is_urgent__exact=1",
                },
            ],
        },
        {
            "models": [
                "jobs.jobapplication",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –∑–∞—è–≤–∫–∏"),
                    "link": lambda request: reverse_lazy("admin:jobs_jobapplication_changelist"),
                },
                {
                    "title": _("–ù–æ–≤—ñ"),
                    "link": lambda request: reverse_lazy("admin:jobs_jobapplication_changelist") + "?is_reviewed__exact=0",
                },
                {
                    "title": _("–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç—ñ"),
                    "link": lambda request: reverse_lazy("admin:jobs_jobapplication_changelist") + "?is_reviewed__exact=1",
                },
            ],
        },
        {
            "models": [
                "partners.partnerinquiry",
            ],
            "items": [
                {
                    "title": _("–í—Å—ñ –∑–∞–ø–∏—Ç–∏"),
                    "link": lambda request: reverse_lazy("admin:partners_partnerinquiry_changelist"),
                },
                {
                    "title": _("–ù–æ–≤—ñ"),
                    "link": lambda request: reverse_lazy("admin:partners_partnerinquiry_changelist") + "?is_processed__exact=0",
                },
                {
                    "title": _("–û–±—Ä–æ–±–ª–µ–Ω—ñ"),
                    "link": lambda request: reverse_lazy("admin:partners_partnerinquiry_changelist") + "?is_processed__exact=1",
                },
            ],
        },
    ],
}

def get_site_icon(request):
    return static("image/favicon.ico")

def get_site_logo(request):
    return static("image/logo.png")


def environment_callback(request):
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ"""
    return "–†–æ–∑—Ä–æ–±–∫–∞" if DEBUG else "–ü—Ä–æ–¥–∞–∫—à–Ω"

def dashboard_callback(request, context):
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞"""
    return context

# Static files
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# –î–æ–¥–∞–π—Ç–µ STATICFILES_DIRS
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# CKEditor media files
CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"


CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_ALLOW_NONIMAGE_FILES = False

# –í–∞–∂–ª–∏–≤–æ! –î–æ–¥–∞–π—Ç–µ —Ü–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:
CKEDITOR_BROWSE_SHOW_DIRS = True
CKEDITOR_UPLOAD_SLUGIFY_FILENAME = True

# –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ MEDIA –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω—ñ:
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


MODELTRANSLATION_PREPOPULATE_LANGUAGE = 'uk'

# CORS –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    # –î–æ–¥–∞–π—Ç–µ –≤–∞—à production –¥–æ–º–µ–Ω
    # "https://yourdomain.com",
]



REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '1000/hour',
        'translations': '100/min',  # –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –ª—ñ–º—ñ—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
    },
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': config('REDIS_URL', default='redis://127.0.0.1:6379/1'),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'SERIALIZER': 'django_redis.serializers.json.JSONSerializer',
        },
        'KEY_PREFIX': 'ugc_api',
        'TIMEOUT': 300,  # 5 —Ö–≤–∏–ª–∏–Ω –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    }
}

# –î–æ–∑–≤–æ–ª–µ–Ω—ñ –º–µ—Ç–æ–¥–∏
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# –î–æ–∑–≤–æ–ª–µ–Ω—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-cache',
    'cache-control',
]

# –î–æ–∑–≤–æ–ª–∏—Ç–∏ credentials
CORS_ALLOW_CREDENTIALS = True

# –ü—Ä–µ—Ñ–ª–∞–π—Ç –∫–µ—à
CORS_PREFLIGHT_MAX_AGE = 86400

# ========== –õ–û–ì–£–í–ê–ù–ù–Ø ==========

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'django.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'apps.api': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propagate': False,
        },
    },
}

# –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥—ñ–≤
os.makedirs(os.path.join(BASE_DIR, 'logs'), exist_ok=True)

# ========== –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –ú–û–î–ï–õ–¨–ù–û–ì–û –ü–ï–†–ï–ö–õ–ê–î–£ ==========

# –î–ª—è django-modeltranslation
MODELTRANSLATION_DEFAULT_LANGUAGE = 'uk'
MODELTRANSLATION_ENABLE_FALLBACKS = True
MODELTRANSLATION_FALLBACK_LANGUAGES = {
    "default": ("uk",),
    "uk": ("uk", "en"),
}


# ========== –ë–ï–ó–ü–ï–ö–ê ==========

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Å—ñ–π
SESSION_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'

# CSRF
CSRF_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS

# –ë–µ–∑–ø–µ–∫–æ–≤—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_FRAME_DENY = True

if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

# ========== –†–û–ó–®–ò–†–ï–ù–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –î–õ–Ø –ü–ï–†–ï–ö–õ–ê–î–Ü–í ==========

# –®–ª—è—Ö–∏ –¥–æ —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
STATIC_TRANSLATIONS_DIR = os.path.join(BASE_DIR, 'static_translations')
os.makedirs(STATIC_TRANSLATIONS_DIR, exist_ok=True)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
TRANSLATION_EXPORT_SETTINGS = {
    'INCLUDE_DYNAMIC': True,
    'INCLUDE_PO': True,
    'CACHE_TIMEOUT': 1800,  # 30 —Ö–≤–∏–ª–∏–Ω
    'BATCH_SIZE': 1000,
    'MAX_EXPORT_SIZE': 10000,
}